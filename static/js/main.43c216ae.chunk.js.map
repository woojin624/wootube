{"version":3,"sources":["components/play_video_screen/play_video_screen.module.css","components/main_video_list/main_video_list.module.css","components/main_search_bar/main_search_bar.module.css","components/search_nav_bar/search_nav_bar.module.css","components/play_nav_bar/play_nav_bar.module.css","components/play_relate_item/play_relate_item.module.css","components/main_video_item/main_video_item.module.css","components/search_video_item/search_video_item.module.css","components/play_list/play_list.module.css","search.module.css","play.module.css","components/footer/footer.module.css","main.module.css","components/search_list/search_list.module.css","components/play_my_list/play_my_list.module.css","components/play_relate_list/play_relate_list.module.css","components/main_search_bar/main_search_bar.jsx","components/footer/footer.jsx","components/main_video_item/main_video_item.jsx","components/main_video_list/main_video_list.jsx","main.jsx","components/search_video_item/search_video_item.jsx","components/search_list/search_list.jsx","components/search_nav_bar/search_nav_bar.jsx","search.jsx","service/youtube.js","components/play_video_screen/play_video_screen.jsx","components/play_search_section/play_search_section.jsx","components/play_my_list/play_my_list.jsx","components/play_relate_item/play_relate_item.jsx","components/play_relate_list/play_relate_list.jsx","components/play_list/play_list.jsx","components/play_nav_bar/play_nav_bar.jsx","play.jsx","app.jsx","index.js"],"names":["module","exports","MainSearchBar","searchValue","history","handleClass","handleValue","searchWrap","useRef","input","mainToSearch","current","value","push","className","styles","header","logo","img","src","alt","titleWrap","title","slogan","ref","onFocus","classNames","focus","onBlur","onKeyPress","event","key","type","placeholder","button","onClick","buttonImg","Footer","props","footer","MainVideoItem","video","onVideoClick","decode","require","thumbWrap","thumbnail","snippet","thumbnails","standard","url","info","channel","channelTitle","MainVideoList","videos","handleVideo","wrapClassFocus","videolistWrap","useEffect","e","videolist","dotNavEls","slideId","sliderContainer","map","id","arrowNav","prevBtn","style","left","arrowTop","arrowBottom","nextBtn","dotnav","selected","Main","youtube","getValue","useHistory","useState","setVideos","mostPopularMain","then","setFocus","main","SearchVideoItem","medium","contentWrap","channelWrap","SearchList","list","SearchNavBar","onSearch","inputRef","handleSearch","navWrap","Search","setGetValue","search","setSelectedVideo","query","window","onload","content","Youtube","this","getRequestOptions","method","redirect","fetch","response","json","result","items","item","videoId","chId","PlayVideoScreen","memo","channelId","console","log","setVideo","setChannel","videoDetail","channels","desc","activeMore","numberWithCommas","x","toString","replace","detail","line","aboutWrap","viewDateWrap","viewCount","statistics","date","publishedAt","substring","likeWrap","likeCount","dislikeCount","videoBox","width","height","frameBorder","allowFullScreen","channelIcon","description","compact","more","currentTarget","innerText","PlaySearchSection","PlayMyList","PlayRelateItem","scrollTo","PlayRelateList","PlayList","listWrap","listNameWrap","resultsListTop","myListTop","PlayNavBar","playToSearch","Play","getVideo","getSearch","selectedVideo","play","playWrap","process","App","SetSearchValue","selectVideo","basename","path","exact","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.43c216ae.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"detail\":\"play_video_screen_detail__1tdd4\",\"line\":\"play_video_screen_line__2asl9\",\"description\":\"play_video_screen_description__39AEj\",\"videoBox\":\"play_video_screen_videoBox__13cun\",\"video\":\"play_video_screen_video__7qELf\",\"title\":\"play_video_screen_title__1DrCG\",\"aboutWrap\":\"play_video_screen_aboutWrap__1Inho\",\"viewDateWrap\":\"play_video_screen_viewDateWrap__2Wrbu\",\"viewCount\":\"play_video_screen_viewCount__3cff6\",\"likeWrap\":\"play_video_screen_likeWrap__2dxuZ\",\"dislikeCount\":\"play_video_screen_dislikeCount__2BASQ\",\"channelWrap\":\"play_video_screen_channelWrap__1zm7i\",\"channelIcon\":\"play_video_screen_channelIcon__2tU3U\",\"channelTitle\":\"play_video_screen_channelTitle__2zpWm\",\"compact\":\"play_video_screen_compact__qBmwf\",\"more\":\"play_video_screen_more__ngPJq\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"videolistWrap\":\"main_video_list_videolistWrap__2w75m\",\"focus\":\"main_video_list_focus__1dTQR\",\"sliderContainer\":\"main_video_list_sliderContainer__XT_YK\",\"videolist\":\"main_video_list_videolist__6RHZT\",\"dotnav\":\"main_video_list_dotnav__3zzlO\",\"selected\":\"main_video_list_selected__3SOn9\",\"arrowNav\":\"main_video_list_arrowNav__1qRQD\",\"prevBtn\":\"main_video_list_prevBtn__3oBx_\",\"arrowTop\":\"main_video_list_arrowTop__gDG_T\",\"arrowBottom\":\"main_video_list_arrowBottom__1Mrpf\",\"nextBtn\":\"main_video_list_nextBtn__2GVkA\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"main_search_bar_header__11Bel\",\"logo\":\"main_search_bar_logo__1zJ_V\",\"img\":\"main_search_bar_img__5nTTe\",\"titleWrap\":\"main_search_bar_titleWrap__AXllP\",\"title\":\"main_search_bar_title__WpEjX\",\"slogan\":\"main_search_bar_slogan__3Bnnx\",\"searchWrap\":\"main_search_bar_searchWrap__2PvZp\",\"input\":\"main_search_bar_input__3YR9u\",\"button\":\"main_search_bar_button__UpH_2\",\"buttonImg\":\"main_search_bar_buttonImg__1iD4I\",\"focus\":\"main_search_bar_focus__2Gg-W\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"search_nav_bar_header__2UZej\",\"navWrap\":\"search_nav_bar_navWrap__1mFbl\",\"logo\":\"search_nav_bar_logo__30Zw7\",\"img\":\"search_nav_bar_img__2r15R\",\"title\":\"search_nav_bar_title__3BR8a\",\"searchWrap\":\"search_nav_bar_searchWrap__qZvwL\",\"input\":\"search_nav_bar_input__28RNv\",\"button\":\"search_nav_bar_button__2BjWK\",\"buttonImg\":\"search_nav_bar_buttonImg__1jQS-\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"play_nav_bar_header__3eyBV\",\"navWrap\":\"play_nav_bar_navWrap__AbEsA\",\"logo\":\"play_nav_bar_logo__24eRX\",\"img\":\"play_nav_bar_img__33H59\",\"title\":\"play_nav_bar_title__1WBEF\",\"searchWrap\":\"play_nav_bar_searchWrap__KQmkB\",\"input\":\"play_nav_bar_input__A5ZLT\",\"button\":\"play_nav_bar_button__1Qhbb\",\"buttonImg\":\"play_nav_bar_buttonImg__5G7Wf\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"video\":\"play_relate_item_video__1z1d8\",\"thumbWrap\":\"play_relate_item_thumbWrap__2noMN\",\"thumbnail\":\"play_relate_item_thumbnail__2tNXh\",\"contentWrap\":\"play_relate_item_contentWrap___E7ri\",\"title\":\"play_relate_item_title__1hnrP\",\"channel\":\"play_relate_item_channel__1MJYp\",\"line\":\"play_relate_item_line__3pQOy\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"video\":\"main_video_item_video__oZ-64\",\"info\":\"main_video_item_info__13kQ5\",\"thumbWrap\":\"main_video_item_thumbWrap__2KmdA\",\"thumbnail\":\"main_video_item_thumbnail__1Ax1r\",\"title\":\"main_video_item_title__1x6VB\",\"channel\":\"main_video_item_channel__2XHiH\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"video\":\"search_video_item_video__1t1Ps\",\"thumbnail\":\"search_video_item_thumbnail__GTQdg\",\"title\":\"search_video_item_title__30b0V\",\"channel\":\"search_video_item_channel__NScyU\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"listWrap\":\"play_list_listWrap__1brmh\",\"listNameWrap\":\"play_list_listNameWrap__2oAa_\",\"resultsListTop\":\"play_list_resultsListTop__11f-W\",\"myListTop\":\"play_list_myListTop__1v4RG\",\"active\":\"play_list_active__3iSh8\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"search\":\"search_search__2gDMQ\",\"content\":\"search_content__1VZFG\",\"detail\":\"search_detail__3hdlQ\",\"list\":\"search_list__1-MXO\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"play\":\"play_play__1aOgI\",\"playWrap\":\"play_playWrap__1BHQY\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"footer\":\"footer_footer__1lZIc\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"main\":\"main_main__3Z9Q7\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"search_list_list__qtODB\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"play_my_list_list__3tw5t\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"play_relate_list_list__3NIg6\"};","import styles from './main_search_bar.module.css';\nimport classNames from 'classnames';\nimport React, { useRef } from 'react';\n\n// 메인화면에서 보이는 로고와 검색창을 담당하는 컴포넌트이다\n\n// 부모 컴포넌트로부터 history를 받아와서 button이 onClick시 history.push('/search')가 작동하도록 함\nconst MainSearchBar = ({ history, handleClass, handleValue }) => {\n  // history가 나온다\n  // console.log(history);\n  const searchWrap = useRef();\n  const input = useRef();\n  let searchValue;\n  let listClass;\n\n  // 인풋 태그에 전달해주는 함수\n  // 검색창에 무언가를 입력한 상태에서 엔터키를 누르면 mainToSearch 함수가 실행\n  const onKeyPress = (event) => {\n    if (event.key === 'Enter' && input.current.value !== '') {\n      mainToSearch();\n    }\n  };\n\n  // onKeyPress와 onClick에서 동시에 같은 함수가 일어나게 하기 위하여 분리시킨 함수\n  const mainToSearch = () => {\n    // props로 받아온 handleValue를 통해 현재 input에 입력된 값을 부모 컴포넌트에 전송\n    searchValue = input.current.value;\n    handleValue(searchValue);\n    // props로 받아온 history를 사용하여 서치로 이동\n    history.push('/search');\n  };\n\n  // 메인 검색창 돋보기 모양을 누르면 포커스온이 된다\n  // 포커스온이 되면 focus클래스가 추가되며 검색창이 길어진다\n\n  // ******포커스온이 되는 순간 형제 컴포넌트인 MainVideoList의 최상위 노드인 section.videolistWrap에 focus클래스를 추가해야한다**\n  // 본인 -> 형제로 전달을 해주거나\n  // 본인 -> 부모 -> 형제로 전달해주는 방법을 찾아야한다\n  const searchFocusOn = () => {\n    // 사용하는 css가 postCSS이므로 일반적인 클래스 추가 방식이 아닌\n    // join을 통하여 클래스 이름을 연결시켜준다.\n    // let className = searchWrap.current.className;\n    // searchWrap.current.className = `${[className, styles.focus].join(' ')}`;\n    searchWrap.current.className = `${classNames(styles.searchWrap, styles.focus)}`;\n    // listClass = 'main_video_list_videolistWrap__2w75m main_video_list_focus__1dTQR';\n    listClass = false;\n    // 부모컴포넌트로부터 받아와 작동시키는 함수\n    handleClass(listClass);\n  };\n\n  // 메인 검색창에서 포커스아웃 될 때 만약 input안의 value가 비어있으면 클래스를 제거하여 원위치로 돌아온다\n  // 하지만 만약 어떠한 값이 입력되어 있으면 포커스가 나가도 현재상태를 유지\n  const searchFocusOut = () => {\n    if (input.current.value === '') {\n      // let className = styles.searchWrap;\n      // searchWrap.current.className = className;\n      searchWrap.current.className = `${classNames(styles.searchWrap)}`;\n      // listClass = 'main_video_list_videolistWrap__2w75m';\n      listClass = true;\n      // 부모컴포넌트로부터 받아와 작동시키는 함수\n      handleClass(listClass);\n    }\n  };\n\n  return (\n    <header className={styles.header}>\n      <div className={styles.logo}>\n        <img className={styles.img} src='/images/icon-logo.png' alt='logo' />\n        <div className={styles.titleWrap}>\n          <h1 className={styles.title}>WOOTUBE</h1>\n          <p className={styles.slogan}>You can make your playlist on playing</p>\n        </div>\n      </div>\n      <div ref={searchWrap} className={styles.searchWrap}>\n        {/* 인풋을 통하여 검색창의 인터랙션을 제어, onFocus와 onBlur */}\n        <input ref={input} className={styles.input} onFocus={searchFocusOn} onBlur={searchFocusOut} onKeyPress={onKeyPress} type='search' placeholder='' />\n        <button className={styles.button} onClick={mainToSearch} type='submit'>\n          <img className={styles.buttonImg} src='/images/icon-search-blue.png' alt='search' />\n        </button>\n      </div>\n    </header>\n  );\n};\n\nexport default MainSearchBar;\n","import React from 'react';\nimport styles from './footer.module.css';\n\n// 그냥 푸터\n\nconst Footer = (props) => {\n  return <footer className={styles.footer}>2020 WOOTUBE All Right Reserved</footer>;\n};\n\nexport default Footer;\n","import React from 'react';\nimport styles from './main_video_item.module.css';\n\n// 메인화면에 나오게 되는 인기영상리스트에 들어가는 video_item이다\n// props으로 받아온 값을 통해 비디오의 썸네일과 정보를 보여준다\n\nconst MainVideoItem = ({ video, onVideoClick }) => {\n  let decode = require('unescape');\n  // console.log(video);\n\n  const clickVideo = () => {\n    onVideoClick(video);\n  };\n\n  return (\n    <li className={styles.video} onClick={clickVideo}>\n      <figure className={styles.thumbWrap}>\n        <img className={styles.thumbnail} src={video.snippet.thumbnails.standard.url} alt='video thumbnails' />\n      </figure>\n      <div className={styles.info}>\n        <p className={styles.title}>{decode(video.snippet.title)}</p>\n        <p className={styles.channel}>{video.snippet.channelTitle}</p>\n      </div>\n    </li>\n  );\n};\n\nexport default MainVideoItem;\n","import React, { useEffect, useRef } from 'react';\nimport MainVideoItem from '../main_video_item/main_video_item';\nimport classNames from 'classnames';\nimport styles from './main_video_list.module.css';\n\n// 메인화면에서 인기영상을 보여주는 비디오 슬라이더이다\n// 기본 상태에서 리스트가 보이며 돋보기에 포커싱이 되었을 때\n// 리스트의 높이가 낮아지며 오버플로우에 가려져 보이지 않게된다.\n\nconst MainVideoList = ({ videos, focus, handleVideo }) => {\n  // -----업데이트 된 focus를 전달 받는 방법을 찾아야한다\n  // console.log(focus);\n\n  let wrapClassFocus = focus;\n  // section.videolistWrap을 ref로 받아온다\n  const videolistWrap = useRef();\n\n  // videolistWrap의 클래스를 바꾸어줄 함수\n  const videolistActive = () => {\n    // focus = eval(focus);\n    if (wrapClassFocus == false) {\n      videolistWrap.current.className = `${classNames(styles.videolistWrap, styles.focus)}`;\n    } else if (wrapClassFocus == true) {\n      videolistWrap.current.className = `${classNames(styles.videolistWrap)}`;\n    }\n    // console.log(className);\n  };\n  // focus가 업데이트되고 videolistActive()함수를 실행시키기 위해 useEffect() 사용\n  useEffect(() => {\n    videolistActive();\n  });\n\n  // 자식컴포넌트로부터 video를 받아오는 함수\n  const onVideoClick = (e) => {\n    handleVideo(e);\n  };\n\n  // videolist, dotNavEls를 ref로 받아온다\n  const videolist = useRef();\n  const dotNavEls = useRef();\n\n  let slideId = 1;\n\n  // 좌우 화살표의 기능을 맡는 함수\n  const mainSlidePrev = () => {\n    slideId--;\n    if (slideId === -1) {\n      slideId = 0;\n    }\n    videolist.current.style.left = -(slideId * 100) + '%';\n  };\n\n  const mainSlideNext = () => {\n    slideId++;\n    if (slideId === 10) {\n      slideId = 9;\n    }\n    videolist.current.style.left = -(slideId * 100) + '%';\n  };\n\n  // 기본적인 슬라이더의 형태를 가지고 있으며\n  // ul태그 안에서는 props로 받아온 videos를 map을 통해 각각 MainVideoItem에 id를 부여해준다\n  // MainVideoItem에서 생성된 li들로 슬라이더를 채운다\n\n  return (\n    <section ref={videolistWrap} className={styles.videolistWrap}>\n      <div className={styles.sliderContainer}>\n        <ul ref={videolist} className={styles.videolist}>\n          {videos.map((video) => (\n            <MainVideoItem key={video.id} video={video} onVideoClick={onVideoClick} />\n          ))}\n        </ul>\n        <nav className={styles.arrowNav}>\n          <ul>\n            <li className={styles.prevBtn} onClick={mainSlidePrev}>\n              <div className={styles.arrowTop}></div>\n              <div className={styles.arrowBottom}></div>\n            </li>\n            <li className={styles.nextBtn} onClick={mainSlideNext}>\n              <div className={styles.arrowTop}></div>\n              <div className={styles.arrowBottom}></div>\n            </li>\n          </ul>\n        </nav>\n        <nav className={styles.dotnav}>\n          <ul>\n            <li>\n              <span ref={dotNavEls} className={styles.selected}>\n                &nbsp;\n              </span>\n            </li>\n            <li>\n              <span ref={dotNavEls}>&nbsp;</span>\n            </li>\n            <li>\n              <span ref={dotNavEls}>&nbsp;</span>\n            </li>\n            <li>\n              <span ref={dotNavEls}>&nbsp;</span>\n            </li>\n            <li>\n              <span ref={dotNavEls}>&nbsp;</span>\n            </li>\n            <li>\n              <span ref={dotNavEls}>&nbsp;</span>\n            </li>\n            <li>\n              <span ref={dotNavEls}>&nbsp;</span>\n            </li>\n            <li>\n              <span ref={dotNavEls}>&nbsp;</span>\n            </li>\n            <li>\n              <span ref={dotNavEls}>&nbsp;</span>\n            </li>\n            <li>\n              <span ref={dotNavEls}>&nbsp;</span>\n            </li>\n          </ul>\n        </nav>\n      </div>\n    </section>\n  );\n};\n\nexport default MainVideoList;\n","import React, { useEffect, useState } from 'react';\nimport MainSearchBar from './components/main_search_bar/main_search_bar.jsx';\nimport Footer from './components/footer/footer.jsx';\nimport styles from './main.module.css';\nimport MainVideoList from './components/main_video_list/main_video_list.jsx';\nimport { useHistory } from 'react-router-dom';\n\nfunction Main({ youtube, getValue, onVideoClick }) {\n  // useHistory를 사용하여 경로를 사용\n  const history = useHistory();\n\n  const [videos, setVideos] = useState([]);\n\n  useEffect(() => {\n    youtube.mostPopularMain().then((videos) => setVideos(videos));\n  }, [youtube]);\n\n  // main_video_list의 클래스를 조작해줄 focus states\n  const [focus, setFocus] = useState(true);\n  // 자식 컴포넌트로부터 조작될 함수\n  // search_nav_bar에서 클래스 이름을 바꿔서 가져오는 것까지 해결\n  // setFocus를 써서 state변경\n  const handleClass = (e) => {\n    setFocus(e);\n  };\n\n  // useEffect(() => {\n  //   // console.log('class changed', focus);\n  // }, [focus]);\n\n  // 자식 컴포넌트의 input에서 전송된 값을 getValue를 통해 또 다시 부모 컴포넌트에게 전송\n  const handleValue = (e) => {\n    getValue(e);\n  };\n\n  // 자식컴포넌트로부터 video를 받아오는 함수이면서 클릭시 play페이지로 이동시킨다\n  const handleVideo = (e) => {\n    onVideoClick(e);\n    history.push('/play');\n  };\n\n  return (\n    <div className={styles.main}>\n      {/* 자식 컴포넌트인 MainSearchBar에 props으로 history를 보냄 */}\n      <MainSearchBar history={history} handleClass={handleClass} handleValue={handleValue} />\n      <MainVideoList videos={videos} focus={focus} handleVideo={handleVideo} />\n      <Footer />\n    </div>\n  );\n}\n\nexport default Main;\n","import React from 'react';\nimport styles from './search_video_item.module.css';\n\n// 검색된 결과를 출력할 때 한개 한개의 비디오를 표시할 video_item\n\n// 부모 컴포넌트로부터 props을 받아온다 (videos)\n// 리스트 형식으로 li 태그를 사용하고 그 안에 썸네일과 제목, 채널 이름을 넣음\n\nconst SearchVideoItem = ({ video, video: { snippet }, onVideoClick }) => {\n  let decode = require('unescape');\n\n  return (\n    <li className={styles.video} onClick={() => onVideoClick(video)}>\n      <img className={styles.thumbnail} src={snippet.thumbnails.medium.url} alt='video thumbnail' />\n      <div className={styles.contentWrap}>\n        <p className={styles.title}>{decode(snippet.title)}</p>\n        <div className={styles.channelWrap}>\n          {/* <img className={styles.channelIcon} src=\"\" alt=\"\" /> */}\n          <p className={styles.channel}>{snippet.channelTitle}</p>\n        </div>\n      </div>\n    </li>\n  );\n};\n\nexport default SearchVideoItem;\n","import React from 'react';\nimport SearchVideoItem from '../search_video_item/search_video_item';\nimport styles from './search_list.module.css';\n\n// 검색된 결과를 보여줄 리스트이다. 자식 컴포넌트인 SearchVideoItem을 가져와 리스트를 채운다\n\n// unordered list 형식인 ul태그를 사용하고 그 안을 li인 video_item으로 채운다\n// 부모 컴포넌트로부터 props를 받아오며 받아온 props의 videos를 map을 통해 빙글빙글 돌며 하나의 비디오마다 id를 설정해준다\n\nconst SearchList = ({ videos, handleVideo }) => {\n  return (\n    <ul className={styles.list}>\n      {videos.map((video) => (\n        <SearchVideoItem key={video.id} video={video} onVideoClick={handleVideo} />\n      ))}\n    </ul>\n  );\n};\n\nexport default SearchList;\n","import React, { useRef, useEffect } from 'react';\nimport styles from './search_nav_bar.module.css';\n\n// 부모 컴포넌트로부터 history를 받아와서 logo가 onClick시 history.push('/')가 작동하도록 함\nconst SearchNavBar = ({ onSearch, history, getValue }) => {\n  const inputRef = useRef();\n  const handleSearch = () => {\n    const value = inputRef.current.value;\n    onSearch(value);\n    history.push('/search');\n    // value = 'asd';\n  };\n  const onClick = () => {\n    handleSearch();\n  };\n\n  const onKeyPress = (event) => {\n    if (event.key === 'Enter' && inputRef.current.value !== '') {\n      handleSearch();\n    }\n  };\n\n  // main_search_bar에서 받아온 값을 input의 value에 띄운다\n  useEffect(() => {\n    inputRef.current.value = getValue;\n  }, [getValue]);\n\n  // 검색결과 화면의 상단에 위치하는 navbar를 보여준다\n  // 큰 틀은 header태그를 사용하며 nav태그 안에서 로고와 타이틀, 그리고 검색을 하는 searchWrap영역이 있다\n  // searchWrap영역안에는 검색할 것을 입력할 input태그와 값을 전달할 button태그로 이루어져 있으며\n  // input에는 onKeyPress() 함수를, button에는 onClick() 함수를 주고 둘 다 handleSearch()라는 함수를 호출하게 된다\n\n  // handleSearch()함수는 ref로 연결된 input태그에 현재 입력된 값(const value = inputRef.current.value;)을 onSearch()로 전달해준다\n\n  return (\n    <header className={styles.header}>\n      <nav className={styles.navWrap}>\n        <div\n          className={styles.logo}\n          onClick={() => {\n            // props로 받아온 history를 사용하여 메인으로 이동\n            history.push('/');\n          }}\n        >\n          <img className={styles.img} src='/images/icon-logo.png' alt='logo' />\n          <h1 className={styles.title}>WOOTUBE</h1>\n        </div>\n        <div className={styles.searchWrap}>\n          <input ref={inputRef} className={styles.input} type='search' placeholder='Search...' onKeyPress={onKeyPress} />\n          <button className={styles.button} type='submit' onClick={onClick}>\n            <img className={styles.buttonImg} src='/images/icon-search-blue.png' alt='search' />\n          </button>\n        </div>\n      </nav>\n    </header>\n  );\n};\n\nexport default SearchNavBar;\n","import React, { useEffect, useState } from 'react';\nimport { useHistory } from 'react-router-dom';\n//import PlayVideoDetail from './components/play_video_detail/play_video_detail';\nimport SearchList from './components/search_list/search_list';\nimport SearchNavBar from './components/search_nav_bar/search_nav_bar';\nimport styles from './search.module.css';\n\nfunction Search({ youtube, searchValue, onVideoClick }) {\n  // main_search_bar에서 app.jsx까지 올라간 searchValue데이터를 부모로부터 받아왔다\n  const [getValue, setGetValue] = useState();\n  // 컴포넌트가 업데이트 됐을 때 setGetValue로 input창의 value값을 입력\n  // search(searchValue)를 통해 메인에서 검색한 검색어의 영상을 띄움\n  useEffect(() => {\n    // console.log(searchValue);\n    setGetValue(searchValue);\n    search(searchValue);\n  }, [searchValue]);\n\n  // useHistory를 사용하여 경로를 사용\n  const history = useHistory();\n\n  const [videos, setVideos] = useState([]);\n  // 비디오를 선택하면 선택한 비디오의 정보를 저장하고, 그 정보를 이용해서 비디오의 디테일을 보여준다\n  const [selectedVideo, setSelectedVideo] = useState(null);\n\n  const search = (query) => {\n    setSelectedVideo(null);\n    youtube\n      .search(query) //\n      .then((videos) => setVideos(videos));\n  };\n\n  // 자식요소로부터 video로 정보를 받아오는 함수이면서 li요소 클릭시 play페이지로 이동시키는 함수\n  const handleVideo = (e) => {\n    onVideoClick(e);\n    history.push('/play');\n  };\n\n  window.onload = function () {\n    history.push('/');\n  };\n\n  return (\n    <div className={styles.search}>\n      {/* 자식 컴포넌트인 SearchNavBar에 props으로 history를 보냄 */}\n      <SearchNavBar onSearch={search} history={history} getValue={getValue} />\n      <section className={styles.content}>\n        <div className={styles.list}>\n          <SearchList\n            videos={videos} //\n            handleVideo={handleVideo}\n          />\n        </div>\n      </section>\n    </div>\n  );\n}\n\nexport default Search;\n","class Youtube {\n  constructor(key) {\n    this.key = key;\n    this.getRequestOptions = {\n      method: 'GET',\n      redirect: 'follow',\n    };\n  }\n\n  // 인기 영상 12개를 받아온다.\n  async mostPopular() {\n    const response = await fetch(`https://www.googleapis.com/youtube/v3/videos?part=snippet&chart=mostPopular&maxResults=12&key=${this.key}`, this.getRequestOptions);\n    const result = await response.json();\n    return result.items;\n  }\n\n  // 메인에 띄울 인기 영상 10개를 받아온다.\n  async mostPopularMain() {\n    const response = await fetch(`https://www.googleapis.com/youtube/v3/videos?part=snippet&chart=mostPopular&maxResults=10&key=${this.key}`, this.getRequestOptions);\n    const result = await response.json();\n    return result.items;\n  }\n\n  // query에 입력되는 값으로 검색결과 상위권 12개를 받아온다\n  async search(query) {\n    const response = await fetch(`https://www.googleapis.com/youtube/v3/search?part=snippet&maxResults=12&q=${query}&type=video&key=${this.key}`, this.getRequestOptions);\n    const result = await response.json();\n    return result.items.map((item) => ({ ...item, id: item.id.videoId }));\n  }\n\n  // id 파라미터에 입력된 게 videoId가 되어 해당 id의 비디오를 받아옵니다.\n  async videoDetail(id) {\n    const response = await fetch(`https://www.googleapis.com/youtube/v3/videos?part=snippet&part=contentDetails&part=statistics&id=${id}&key=${this.key}`, this.getRequestOptions);\n    const result = await response.json();\n    return result.items;\n  }\n\n  // chId 파라미터에 입력된 게 channelId가 되어 해당 id의 채널을 받아옵니다.\n  async channels(chId) {\n    const response = await fetch(`https://www.googleapis.com/youtube/v3/channels?part=snippet&part=contentDetails&part=statistics&id=${chId}&key=${this.key}`, this.getRequestOptions);\n    const result = await response.json();\n    return result.items;\n  }\n}\n\nexport default Youtube;\n","import React, { memo, useEffect, useRef, useState } from 'react';\nimport classNames from 'classnames';\nimport styles from './play_video_screen.module.css';\n\nconst PlayVideoScreen = memo(({ videoId, channelId, youtube }) => {\n  console.log('프롭으로 받아온 videoId : ', videoId);\n  // console.log('프롭으로 받아온 channelId : ', channelId);\n\n  const [video, setVideo] = useState(null);\n  const [channel, setChannel] = useState(null);\n\n  useEffect(() => {\n    youtube\n      .videoDetail(videoId) //\n      .then((video) => setVideo(video));\n    youtube\n      .channels(channelId) //\n      .then((channel) => setChannel(channel));\n  }, [videoId, channelId, youtube]);\n\n  // channel && console.log(\"새로운 채널의 Id : \", channel[0].id);\n  video && console.log('새로운 비디오의 Id : ', video[0].id);\n\n  const desc = useRef();\n  let activeMore = false;\n  const moreDesc = (e) => {\n    if (activeMore == false) {\n      desc.current.className = `${classNames(styles.description)}`;\n      e.currentTarget.innerText = '간략히';\n      activeMore = true;\n    } else if (activeMore == true) {\n      desc.current.className = `${classNames(styles.description, styles.compact)}`;\n      e.currentTarget.innerText = '더보기';\n      activeMore = false;\n    }\n  };\n\n  //\n  // title Symbols decoding\n  let decode = require('unescape');\n  // cut text after Date\n  function numberWithCommas(x) {\n    return x.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, ',');\n  }\n\n  return (\n    <>\n      {video && (\n        <section className={styles.detail}>\n          <div className={styles.line}></div>\n          <h2 className={styles.title}>{decode(video[0].snippet.title)}</h2>\n          <div className={styles.aboutWrap}>\n            <div className={styles.viewDateWrap}>\n              <h4 className={styles.viewCount}>\n                <i className='fas fa-play'></i> {numberWithCommas(video[0].statistics.viewCount)}\n              </h4>\n              <h4 className={styles.date}>ㅣ 등록일 {video[0].snippet.publishedAt.substring(0, 10)}</h4>\n            </div>\n            <div className={styles.likeWrap}>\n              <h4 className={styles.likeCount}>\n                <i className='fas fa-thumbs-up'></i> {numberWithCommas(video[0].statistics.likeCount)}\n              </h4>\n              <h4 className={styles.dislikeCount}>\n                <i className='fas fa-thumbs-down'></i> {numberWithCommas(video[0].statistics.dislikeCount)}\n              </h4>\n            </div>\n          </div>\n          <div className={styles.videoBox}>\n            <iframe\n              className={styles.video} //\n              type='text/html'\n              title='youtube video player'\n              width='100%'\n              height='100%'\n              src={`https://www.youtube.com/embed/${video[0].id}?autoplay=1`}\n              frameBorder='0'\n              allowFullScreen\n            ></iframe>\n          </div>\n\n          <div className={styles.line}></div>\n          <div className={styles.channelWrap}>\n            <img className={styles.channelIcon} src={channel[0].snippet.thumbnails.medium.url} alt='' />\n            <h3 className={styles.channelTitle}>{video[0].snippet.channelTitle}</h3>\n          </div>\n          <pre ref={desc} className={classNames(styles.description, styles.compact)}>\n            {video[0].snippet.description}\n          </pre>\n          <span className={styles.more} onClick={moreDesc}>\n            더보기\n          </span>\n          <div className={styles.line}></div>\n        </section>\n      )}\n    </>\n  );\n});\n// .play_video_screen_description__39AEj.play_video_screen_compact__qBmwf\nexport default PlayVideoScreen;\n","import React from 'react';\n//import styles from './play_search_section.module.css';\n\nconst PlaySearchSection = (props) => <h1>PlaySearchSection</h1>;\n\nexport default PlaySearchSection;\n","import React from 'react';\nimport styles from './play_my_list.module.css';\n\nconst PlayMyList = (props) => (\n  <ul className={styles.list}>\n    MyList\n    {/* {videos.map((video) => (\n      <SearchVideoItem key={video.id} video={video} onVideoClick={handleVideo} />\n    ))} */}\n  </ul>\n);\n\nexport default PlayMyList;\n","import React from 'react';\nimport styles from './play_relate_item.module.css';\n\nconst PlayRelateItem = ({ video, video: { snippet }, onVideoClick }) => {\n  let decode = require('unescape');\n\n  const clickVideo = () => {\n    onVideoClick(video);\n    window.scrollTo(0, 0);\n  };\n\n  return (\n    <>\n      <li className={styles.video} onClick={clickVideo}>\n        <div className={styles.thumbWrap}>\n          <img className={styles.thumbnail} src={snippet.thumbnails.medium.url} alt='video thumbnail' />\n        </div>\n        <div className={styles.contentWrap}>\n          <p className={styles.title}>{decode(snippet.title)}</p>\n          <div className={styles.channelWrap}>\n            {/* <img className={styles.channelIcon} src=\"\" alt=\"\" /> */}\n            <p className={styles.channel}>{snippet.channelTitle}</p>\n          </div>\n        </div>\n      </li>\n      <div className={styles.line}></div>\n    </>\n  );\n};\n\nexport default PlayRelateItem;\n","import React from 'react';\nimport PlayRelateItem from '../play_relate_item/play_relate_item';\nimport styles from './play_relate_list.module.css';\n\nconst PlayRelateList = ({ videos, handleVideo }) => {\n  return (\n    <ul className={styles.list}>\n      {videos.map((video) => (\n        <PlayRelateItem key={video.id} video={video} onVideoClick={handleVideo} />\n      ))}\n    </ul>\n  );\n};\n\nexport default PlayRelateList;\n","import React from 'react';\nimport PlayMyList from '../play_my_list/play_my_list';\nimport PlayRelateList from '../play_relate_list/play_relate_list';\nimport styles from './play_list.module.css';\n\nconst PlayList = ({ videos, handleVideo }) => {\n  return (\n    <div className={styles.listWrap}>\n      <div className={styles.listNameWrap}>\n        <h2 className={styles.resultsListTop}>Results</h2>\n        <h2 className={styles.myListTop}>My Play List</h2>\n      </div>\n      <PlayRelateList\n        videos={videos} //\n        handleVideo={handleVideo}\n      />\n      <PlayMyList />\n    </div>\n  );\n};\n\nexport default PlayList;\n","import React, { useRef, useEffect } from 'react';\nimport styles from './play_nav_bar.module.css';\n\n// 부모 컴포넌트로부터 history를 받아와서 logo가 onClick시 history.push('/')가 작동하도록 함\nconst PlayNavBar = ({ history, getValue, handleValue }) => {\n  const inputRef = useRef();\n  let value;\n  const onClick = () => {\n    playToSearch();\n  };\n\n  const onKeyPress = (event) => {\n    if (event.key === 'Enter' && inputRef.current.value !== '') {\n      playToSearch();\n    }\n  };\n\n  // onKeyPress와 onClick에서 동시에 같은 함수가 일어나게 하기 위하여 분리시킨 함수\n  const playToSearch = () => {\n    value = inputRef.current.value;\n    // props로 받아온 handleValue를 통해 현재 input에 입력된 값을 부모 컴포넌트에 전송\n    handleValue(value);\n    history.push('/search');\n    // value = 'asd';\n    console.log(value);\n  };\n\n  // main_search_bar에서 받아온 값을 input의 value에 띄운다\n  useEffect(() => {\n    inputRef.current.value = getValue;\n  }, [getValue]);\n\n  // 플레이 화면의 상단에 위치하는 navbar를 보여준다\n  // 큰 틀은 header태그를 사용하며 nav태그 안에서 로고와 타이틀, 그리고 검색을 하는 searchWrap영역이 있다\n  // searchWrap영역안에는 검색할 것을 입력할 input태그와 값을 전달할 button태그로 이루어져 있으며\n  // input에는 onKeyPress() 함수를, button에는 onClick() 함수를 주고 둘 다 handleSearch()라는 함수를 호출하게 된다\n\n  // handleSearch()함수는 ref로 연결된 input태그에 현재 입력된 값(const value = inputRef.current.value;)을 onSearch()로 전달해준다\n\n  return (\n    <header className={styles.header}>\n      <nav className={styles.navWrap}>\n        <div\n          className={styles.logo}\n          onClick={() => {\n            // props로 받아온 history를 사용하여 메인으로 이동\n            history.push('/');\n          }}\n        >\n          <img className={styles.img} src='/images/icon-logo.png' alt='logo' />\n          <h1 className={styles.title}>WOOTUBE</h1>\n        </div>\n        <div className={styles.searchWrap}>\n          <input ref={inputRef} className={styles.input} type='search' placeholder='Search...' onKeyPress={onKeyPress} />\n          <button className={styles.button} type='submit' onClick={onClick}>\n            <img className={styles.buttonImg} src='/images/icon-search-blue.png' alt='search' />\n          </button>\n        </div>\n      </nav>\n    </header>\n  );\n};\n\nexport default PlayNavBar;\n","import React, { useEffect, useState } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport PlayVideoScreen from './components/play_video_screen/play_video_screen';\nimport PlaySearchSection from './components/play_search_section/play_search_section';\nimport PlayList from './components/play_list/play_list';\nimport styles from './play.module.css';\nimport PlayNavBar from './components/play_nav_bar/play_nav_bar';\n\nfunction Play({ youtube, getVideo, searchValue, getSearch, onVideoClick }) {\n  // main_search_bar에서 app.jsx까지 올라간 searchValue데이터를 부모로부터 받아왔다\n  const [getValue, setGetValue] = useState();\n  // 컴포넌트가 업데이트 됐을 때 setGetValue로 input창의 value값을 입력\n  // search(searchValue)를 통해 메인에서 검색한 검색어의 영상을 띄움\n  useEffect(() => {\n    setGetValue(searchValue);\n    search(searchValue);\n  }, [searchValue]);\n\n  //   const [getValue, setGetValue] = useState();\n  const history = useHistory();\n\n  const [videos, setVideos] = useState([]);\n\n  // 비디오를 선택하면 선택한 비디오의 정보를 저장하고, 그 정보를 이용해서 비디오의 디테일을 보여준다\n  const [selectedVideo, setSelectedVideo] = useState(null);\n\n  const handleValue = (e) => {\n    getSearch(e);\n  };\n\n  // 자식요소로부터 video로 정보를 받아오는 함수이면서 li요소 클릭시 play페이지로 이동시키는 함수\n  const handleVideo = (e) => {\n    onVideoClick(e);\n    history.push('/play');\n    console.log(e);\n  };\n\n  // app으로부터 받아온 getVideo로 state를 업데이트한다\n  useEffect(() => {\n    setSelectedVideo(getVideo);\n    // console.log(getVideo);\n  }, [getVideo]);\n\n  const search = (query) => {\n    setSelectedVideo(null);\n    youtube\n      .search(query) //\n      .then((videos) => setVideos(videos));\n  };\n\n  window.onload = function () {\n    history.push('/');\n  };\n\n  return (\n    <>\n      <PlayNavBar onSearch={search} handleValue={handleValue} history={history} getValue={getValue} />\n      {/* selectedVideo가 있다면 */}\n      {selectedVideo && (\n        <div className={styles.play}>\n          <div className={styles.playWrap}>\n            <PlayVideoScreen videoId={selectedVideo.id} channelId={selectedVideo.snippet.channelId} youtube={youtube} />\n            <PlaySearchSection />\n          </div>\n          <PlayList\n            videos={videos} //\n            handleVideo={handleVideo}\n          />\n        </div>\n      )}\n    </>\n  );\n}\n\nexport default Play;\n","import React, { useState } from 'react';\nimport './app.css';\nimport './reset.css';\nimport Main from './main';\nimport Search from './search';\nimport Youtube from './service/youtube';\nimport { BrowserRouter, Route, Switch } from 'react-router-dom';\nimport Play from './play';\n\nconst youtube = new Youtube(process.env.REACT_APP_YOUTUBE_API_KEY);\nfunction App() {\n  const [searchValue, SetSearchValue] = useState([]);\n  // main_search_bar로부터 받아온 value값\n  const getValue = (e) => {\n    // console.log(e);\n    SetSearchValue(e);\n  };\n\n  const [selectedVideo, setSelectedVideo] = useState(null);\n\n  const selectVideo = (e) => {\n    setSelectedVideo(e);\n    // console.log(e);\n  };\n\n  return (\n    <BrowserRouter basename={process.env.PUBLIC_URL}>\n      <Switch>\n        <Route path={['/', '/main']} exact>\n          {/* connect Main */}\n          <Main youtube={youtube} getValue={getValue} onVideoClick={selectVideo} />\n        </Route>\n        <Route path='/search'>\n          {/* connect Search */}\n          <Search youtube={youtube} searchValue={searchValue} onVideoClick={selectVideo} />\n        </Route>\n        <Route path='/play'>\n          {/* connect Play */}\n          <Play youtube={youtube} getSearch={getValue} searchValue={searchValue} onVideoClick={selectVideo} getVideo={selectedVideo} />\n        </Route>\n      </Switch>\n    </BrowserRouter>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './app';\nimport '@fortawesome/fontawesome-free/js/all.js';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}